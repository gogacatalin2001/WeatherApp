{"event":"runStart","testCount":"45","fuzzRuns":"100","globs":[],"paths":["/home/gogacatalin2001/University/FP/WeatherApp/tests/DayViewTests.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/MainTests.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Model/WeatherData/ToHourlyDataPoints0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Model/WeatherItems/AllSelected0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Model/WeatherItems/AllSelected1.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Model/WeatherItems/IsItemSelected0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Model/WeatherItems/Set0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Model/WeatherItems/Set1.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/GroupBy0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/GroupBy1.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/GroupBy2.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MaximumBy0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MaximumBy1.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MaximumBy2.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MaybeToList0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MaybeToList1.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MinimumBy0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MinimumBy1.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/MinimumBy2.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/ZipFilter0.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/ZipFilter1.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/VerifyExamples/Util/ZipFilter2.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/WeatherDataTests.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/WeatherItemsViewTests.elm","/home/gogacatalin2001/University/FP/WeatherApp/tests/WeekViewTests.elm"],"initialSeed":"376158560164992"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view has class day"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"3"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view has required classes","day-lowtemp"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"7"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view has required classes","day-hightemp"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"7"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view has required classes","day-date"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"4"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view has required classes","day-precipitation"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view contains all data fields","lowTemp"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view contains all data fields","highTemp"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view contains all data fields","lowTemp (Nothing case)"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view contains all data fields","highTemp (Nothing case)"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view contains all data fields","date"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["DayViewTests","View.Day module","Day view contains all data fields","precipitation"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"fail","labels":["MainTests","Main module","view","view contains 4 checkboxes"],"failures":[{"given":null,"message":"â–¼ Query.fromHtml\n\n    <div>\n        <h1>\n            <h1>\n                Weather (DEV)\n            </h1>\n        </h1>\n        <div>\n            <h2>\n                Overview\n            </h2>\n            <div style=\"height:30%;width:30%;\">\n                <div class=\"elm-charts__container\" style=\"position:relative;\">\n                    <div class=\"elm-charts__container-inner\" style=\"height:100%;width:100%;\">\n                        <svg style=\"display:block;\" style=\"overflow: visible;\" viewBox=\"0 0 500 500\">\n                            <defs>\n                                <clipPath id=\"elm-charts__id_500_0_10_50_30_500_0_10_30_50\">\n                                    <rect fill=\"transparent\" height=\"420\" width=\"420\" x=\"50\" y=\"30\">\n                                    </rect>\n                                </clipPath>\n                            </defs>\n                            <g class=\"elm-charts__grid\">\n                                <g class=\"elm-charts__x-grid\">\n                                    <path class=\"elm-charts__line \" d=\"M50 450 L50 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M260 450 L260 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M470 450 L470 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                </g>\n                                <g class=\"elm-charts__y-grid\">\n                                    <path class=\"elm-charts__line \" d=\"M50 450 L470 450\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 366 L470 366\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 282 L470 282\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 198 L470 198\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 114 L470 114\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 30 L470 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 450 L470 450\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 366 L470 366\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 282 L470 282\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 198 L470 198\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 114 L470 114\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 30 L470 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                </g>\n                            </g>\n                            <g class=\"elm-charts__x-ticks\">\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"50\" y1=\"450\" y2=\"455\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"260\" x2=\"260\" y1=\"450\" y2=\"455\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"470\" x2=\"470\" y1=\"450\" y2=\"455\">\n                                </line>\n                            </g>\n                            <g class=\"elm-charts__x-labels\">\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: middle; \" transform=\"translate(50,468) rotate(0)\">\n                                    <tspan>\n                                        1970\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: middle; \" transform=\"translate(260,468) rotate(0)\">\n                                    <tspan>\n                                        00:00:00:005\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: middle; \" transform=\"translate(470,468) rotate(0)\">\n                                    <tspan>\n                                        00:00:00:010\n                                    </tspan>\n                                </text>\n                            </g>\n                            <g class=\"elm-charts__y-labels\">\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,453) rotate(0)\">\n                                    <tspan>\n                                        0\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,369) rotate(0)\">\n                                    <tspan>\n                                        2\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,285) rotate(0)\">\n                                    <tspan>\n                                        4\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,201) rotate(0)\">\n                                    <tspan>\n                                        6\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,117) rotate(0)\">\n                                    <tspan>\n                                        8\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,33) rotate(0)\">\n                                    <tspan>\n                                        10\n                                    </tspan>\n                                </text>\n                            </g>\n                            <g class=\"elm-charts__y-ticks\">\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"450\" y2=\"450\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"366\" y2=\"366\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"282\" y2=\"282\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"198\" y2=\"198\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"114\" y2=\"114\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"30\" y2=\"30\">\n                                </line>\n                            </g>\n                            <g class=\"elm-charts__dot-series\">\n                            </g>\n                            <path class=\"elm-charts__line \" d=\"M50 450 L50 30\" fill=\"transparent\" stroke=\"#12A5ED\" stroke-dasharray=\"5 5\" stroke-opacity=\"1\" stroke-width=\"1\">\n                            </path>\n                            <rect fill=\"transparent\" height=\"420\" width=\"420\" x=\"50\" y=\"30\">\n                            </rect>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\nâ–¼ Query.findAll [ class \"checkbox\", containing [ tag \"input\", attribute \"checked\" True ]  ]\n\n0 matches found for this query.\n\n\nâ–¼ Query.count\n\nExpect.equal","reason":{"type":"Custom","data":"â–¼ Query.fromHtml\n\n    <div>\n        <h1>\n            <h1>\n                Weather (DEV)\n            </h1>\n        </h1>\n        <div>\n            <h2>\n                Overview\n            </h2>\n            <div style=\"height:30%;width:30%;\">\n                <div class=\"elm-charts__container\" style=\"position:relative;\">\n                    <div class=\"elm-charts__container-inner\" style=\"height:100%;width:100%;\">\n                        <svg style=\"display:block;\" style=\"overflow: visible;\" viewBox=\"0 0 500 500\">\n                            <defs>\n                                <clipPath id=\"elm-charts__id_500_0_10_50_30_500_0_10_30_50\">\n                                    <rect fill=\"transparent\" height=\"420\" width=\"420\" x=\"50\" y=\"30\">\n                                    </rect>\n                                </clipPath>\n                            </defs>\n                            <g class=\"elm-charts__grid\">\n                                <g class=\"elm-charts__x-grid\">\n                                    <path class=\"elm-charts__line \" d=\"M50 450 L50 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M260 450 L260 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M470 450 L470 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                </g>\n                                <g class=\"elm-charts__y-grid\">\n                                    <path class=\"elm-charts__line \" d=\"M50 450 L470 450\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 366 L470 366\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 282 L470 282\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 198 L470 198\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 114 L470 114\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 30 L470 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 450 L470 450\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 366 L470 366\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 282 L470 282\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 198 L470 198\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 114 L470 114\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                    <path class=\"elm-charts__line \" d=\"M50 30 L470 30\" fill=\"transparent\" stroke=\"#EFF2FA\" stroke-dasharray=\"\" stroke-opacity=\"1\" stroke-width=\"1\">\n                                    </path>\n                                </g>\n                            </g>\n                            <g class=\"elm-charts__x-ticks\">\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"50\" y1=\"450\" y2=\"455\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"260\" x2=\"260\" y1=\"450\" y2=\"455\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"470\" x2=\"470\" y1=\"450\" y2=\"455\">\n                                </line>\n                            </g>\n                            <g class=\"elm-charts__x-labels\">\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: middle; \" transform=\"translate(50,468) rotate(0)\">\n                                    <tspan>\n                                        1970\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: middle; \" transform=\"translate(260,468) rotate(0)\">\n                                    <tspan>\n                                        00:00:00:005\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: middle; \" transform=\"translate(470,468) rotate(0)\">\n                                    <tspan>\n                                        00:00:00:010\n                                    </tspan>\n                                </text>\n                            </g>\n                            <g class=\"elm-charts__y-labels\">\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,453) rotate(0)\">\n                                    <tspan>\n                                        0\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,369) rotate(0)\">\n                                    <tspan>\n                                        2\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,285) rotate(0)\">\n                                    <tspan>\n                                        4\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,201) rotate(0)\">\n                                    <tspan>\n                                        6\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,117) rotate(0)\">\n                                    <tspan>\n                                        8\n                                    </tspan>\n                                </text>\n                                <text class=\"elm-charts__label\" fill=\"#808BAB\" stroke=\"white\" stroke-width=\"0\" style=\"pointer-events: none;  text-anchor: end; \" transform=\"translate(40,33) rotate(0)\">\n                                    <tspan>\n                                        10\n                                    </tspan>\n                                </text>\n                            </g>\n                            <g class=\"elm-charts__y-ticks\">\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"450\" y2=\"450\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"366\" y2=\"366\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"282\" y2=\"282\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"198\" y2=\"198\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"114\" y2=\"114\">\n                                </line>\n                                <line class=\"elm-charts__tick\" stroke=\"rgb(210, 210, 210)\" stroke-width=\"1\" x1=\"50\" x2=\"45\" y1=\"30\" y2=\"30\">\n                                </line>\n                            </g>\n                            <g class=\"elm-charts__dot-series\">\n                            </g>\n                            <path class=\"elm-charts__line \" d=\"M50 450 L50 30\" fill=\"transparent\" stroke=\"#12A5ED\" stroke-dasharray=\"5 5\" stroke-opacity=\"1\" stroke-width=\"1\">\n                            </path>\n                            <rect fill=\"transparent\" height=\"420\" width=\"420\" x=\"50\" y=\"30\">\n                            </rect>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\nâ–¼ Query.findAll [ class \"checkbox\", containing [ tag \"input\", attribute \"checked\" True ]  ]\n\n0 matches found for this query.\n\n\nâ–¼ Query.count\n\nExpect.equal"}}],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"50"}
{"event":"testCompleted","status":"pass","labels":["MainTests","Main module","update","The selected weather items state is changed correctly in update"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["MainTests","Main module","getChartData extracts data from the model correctly"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"2"}
{"event":"testCompleted","status":"fail","labels":["MainTests","Main module","getWeeklyData extracts data from the model correctly"],"failures":[{"given":null,"message":"This test failed because it threw an exception: \"Error: TODO in module `Main` on line 210\n\ngetWeeklyData\"","reason":{"type":"Custom","data":"This test failed because it threw an exception: \"Error: TODO in module `Main` on line 210\n\ngetWeeklyData\""}}],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.WeatherData.ToHourlyDataPoints0","#toHourlyDataPoints: \n\n    toHourlyDataPoints weatherData\n    --> [ HourlyDataPoint (Time.millisToPosix 1667779200000) 6.9 0\n    --> , HourlyDataPoint (Time.millisToPosix 1667782800000) 6.4 0.1\n    --> , HourlyDataPoint (Time.millisToPosix 1667786400000) 5.6 0.2\n    --> , HourlyDataPoint (Time.millisToPosix 1667790000000) 5.4 0.3\n    --> ]"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.WeatherItems.AllSelected0","#allSelected: \n\n    List.all (\\i -> isItemSelected i allSelected) weatherItems\n    --> True"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.WeatherItems.AllSelected1","#allSelected: \n\n    isItemSelected Temperature allSelected\n    --> True"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.WeatherItems.IsItemSelected0","#isItemSelected: \n\n    isItemSelected Temperature allSelected\n    --> True"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.WeatherItems.Set0","#set: \n\n    allSelected |> set Precipitation False |> isItemSelected Temperature\n    --> True"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.WeatherItems.Set1","#set: \n\n    allSelected |> set Temperature False |> isItemSelected Temperature\n    --> False"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.GroupBy0","#groupBy: \n\n    groupBy identity []\n    --> []"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.GroupBy1","#groupBy: \n\n    groupBy (modBy 10) [ 11, 12, 21, 22 ]\n    --> [(1, [11, 21]), (2, [12, 22])]"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.GroupBy2","#groupBy: \n\n    groupBy .x [ { x = 1 } ]\n    --> [(1, [{x = 1}])]"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MaximumBy0","#maximumBy: \n\n    maximumBy (modBy 10) [ 16, 23, 14, 5 ]\n    --> Just 16"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MaximumBy1","#maximumBy: \n\n    maximumBy .x []\n    --> Nothing"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MaximumBy2","#maximumBy: \n\n    maximumBy .x [ { x = 1, y = 2 } ]\n    --> Just {x = 1, y = 2}"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MaybeToList0","#maybeToList: \n\n    maybeToList Nothing\n    --> []"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MaybeToList1","#maybeToList: \n\n    maybeToList (Just 1)\n    --> [1]"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MinimumBy0","#minimumBy: \n\n    minimumBy (modBy 10) [ 16, 23, 14, 5 ]\n    --> Just 23"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MinimumBy1","#minimumBy: \n\n    minimumBy .x []\n    --> Nothing"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.MinimumBy2","#minimumBy: \n\n    minimumBy .x [ { x = 1, y = 2 } ]\n    --> Just {x = 1, y = 2}"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.ZipFilter0","#zipFilter: \n\n    zipFilter [ True, False, True, False ] [ 1, 2, 3, 4 ]\n    --> [1, 3]"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.ZipFilter1","#zipFilter: \n\n    zipFilter [ False, False ] [ 1, 2 ]\n    --> []"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Util.ZipFilter2","#zipFilter: \n\n    zipFilter [ True, True ] [ 1, 2 ]\n    --> [1, 2]"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["WeatherDataTests","Model.WeatherData module","decodeHourlyData works correctly"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["WeatherDataTests","Model.WeatherData module","decodeWeatherData works correctly"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["WeatherDataTests","Model.WeatherData module","decodeHourlyData returns an error for invalid data"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["WeatherDataTests","Model.WeatherData module","decodeWeatherData returns an error for invalid data"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["WeatherItemsViewTests","View.WeatherItems module","view contains 4 checkboxes"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["WeatherItemsViewTests","View.WeatherItems module","The correct message is sent when a checkbox is clicked"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["WeekViewTests","View.Week module","Week view has class week"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"2"}
{"event":"testCompleted","status":"fail","labels":["WeekViewTests","View.Week module","Week view has the correct number of days"],"failures":[{"given":null,"message":"â–¼ Query.fromHtml\n\n    <div class=\"week\">\n        <div class=\"day\">\n            <div class=\"day-date\">\n                <h2>\n                    2022 Jan 21\n                </h2>\n            </div>\n            <div class=\"day-hightemp\">\n                H: 0\n            </div>\n            <div class=\"day-lowtemp\">\n                L: 10\n            </div>\n            <div class=\"day-precipitation\">\n                Total precipitation: 2\n            </div>\n        </div>\n    </div>\n\n\nâ–¼ Query.findAll [ class \"day\" ]\n\n    1)  <div class=\"day\">\n            <div class=\"day-date\">\n                <h2>\n                    2022 Jan 21\n                </h2>\n            </div>\n            <div class=\"day-hightemp\">\n                H: 0\n            </div>\n            <div class=\"day-lowtemp\">\n                L: 10\n            </div>\n            <div class=\"day-precipitation\">\n                Total precipitation: 2\n            </div>\n        </div>\n\n\nâ–¼ Query.count\n\nExpect.equal","reason":{"type":"Custom","data":"â–¼ Query.fromHtml\n\n    <div class=\"week\">\n        <div class=\"day\">\n            <div class=\"day-date\">\n                <h2>\n                    2022 Jan 21\n                </h2>\n            </div>\n            <div class=\"day-hightemp\">\n                H: 0\n            </div>\n            <div class=\"day-lowtemp\">\n                L: 10\n            </div>\n            <div class=\"day-precipitation\">\n                Total precipitation: 2\n            </div>\n        </div>\n    </div>\n\n\nâ–¼ Query.findAll [ class \"day\" ]\n\n    1)  <div class=\"day\">\n            <div class=\"day-date\">\n                <h2>\n                    2022 Jan 21\n                </h2>\n            </div>\n            <div class=\"day-hightemp\">\n                H: 0\n            </div>\n            <div class=\"day-lowtemp\">\n                L: 10\n            </div>\n            <div class=\"day-precipitation\">\n                Total precipitation: 2\n            </div>\n        </div>\n\n\nâ–¼ Query.count\n\nExpect.equal"}}],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"5"}
{"event":"testCompleted","status":"fail","labels":["WeekViewTests","View.Week module","Week view contains the start and end dates"],"failures":[{"given":null,"message":"â–¼ Query.fromHtml\n\n    <div class=\"week\">\n        <div class=\"day\">\n            <div class=\"day-date\">\n                <h2>\n                    2020 Jan 12\n                </h2>\n            </div>\n            <div class=\"day-hightemp\">\n                H: 0\n            </div>\n            <div class=\"day-lowtemp\">\n                L: 10\n            </div>\n            <div class=\"day-precipitation\">\n                Total precipitation: 2\n            </div>\n        </div>\n    </div>\n\n\nâ–¼ Query.find [ tag \"h2\" ]\n\n    1)  <h2>\n            2020 Jan 12\n        </h2>\n\n\nâ–¼ Query.has [ text \"2022\", text \"2020\", text \"Jan\", text \"Feb\", text \"12\", text \"26\" ]\n\nâœ— has text \"2022\"\nâœ“ has text \"2020\"\nâœ“ has text \"Jan\"\nâœ— has text \"Feb\"\nâœ“ has text \"12\"\nâœ— has text \"26\"","reason":{"type":"Custom","data":"â–¼ Query.fromHtml\n\n    <div class=\"week\">\n        <div class=\"day\">\n            <div class=\"day-date\">\n                <h2>\n                    2020 Jan 12\n                </h2>\n            </div>\n            <div class=\"day-hightemp\">\n                H: 0\n            </div>\n            <div class=\"day-lowtemp\">\n                L: 10\n            </div>\n            <div class=\"day-precipitation\">\n                Total precipitation: 2\n            </div>\n        </div>\n    </div>\n\n\nâ–¼ Query.find [ tag \"h2\" ]\n\n    1)  <h2>\n            2020 Jan 12\n        </h2>\n\n\nâ–¼ Query.has [ text \"2022\", text \"2020\", text \"Jan\", text \"Feb\", text \"12\", text \"26\" ]\n\nâœ— has text \"2022\"\nâœ“ has text \"2020\"\nâœ“ has text \"Jan\"\nâœ— has text \"Feb\"\nâœ“ has text \"12\"\nâœ— has text \"26\""}}],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["WeekViewTests","View.Week module","Week view shows \"No data\" when the list of days is empty"],"failures":[],"distributionReports":[{"type":"NoDistribution","data":null}],"duration":"1"}
{"event":"runComplete","passed":"41","failed":"4","duration":"227","autoFail":null}
